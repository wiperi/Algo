{
	// Place your Algo workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"print a line": {
		"scope": "java",
		"prefix": "pr",
		"body": [
	 		"System.out.println($1);$0"
		],
		"description": ""
	}

	"print array": {
		"scope": "java",
		"prefix": "prarr",
		"body": [
			"for (int ints : ${1:a}) {"
            "    System.out.print(ints + \" \");"
            "}"
            "System.out.println();"
			"$0"
		],
		"description": ""
	}

	"print hash map": {
		"scope": "java",
		"prefix": "prhashmap",
		"body": [
			"for (Map.Entry<${1:Character}, ${2:Integer}> entry : ${3:hashmap}.entrySet()) {"
			"	System.out.println(\"Key: \" + entry.getKey() + \", Value: \" + entry.getValue());"
			"}"
			"$0"
		],
		"description": ""
	}

	"build array of integers": {
		"scope": "java",
		"prefix": "arr",
		"body": [
	 		"${1:int}[] arr = { 4, 3, 2, 1 };$0"
		],
		"description": ""
	}

	"build list": {
		"scope": "java",
		"prefix": "list",
		"body": [
	 		"List<${1:Integer}> ${2:list} = new ArrayList<>();$0"
		],
		"description": ""
	}

	"build function": {
		"scope": "java",
		"prefix": "func",
		"body": [
	 		"public ${1:static} ${2:void} ${3:func}($4) {"
			"	$0"
			"}"
		],
		"description": ""
	}

	"build hash map": {
		"scope": "java",
		"prefix": "hashmap",
		"body": [
			"HashMap<${1:Character}, ${2:Integer}> ${3:window} = new HashMap<>();$0"
		],
		"description": ""
	}

	"middle element": {
		"scope": "java",
		"prefix": "int mid",
		"body": [
	 		"int mid = lo + (hi - lo) / 2;$1"
		],
		"description": ""
	}
}